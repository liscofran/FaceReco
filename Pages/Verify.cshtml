@page
@model VerifyModel
@{
    ViewData["Title"] = "Verifica";
}

<h1>@ViewData["Title"]</h1>

<div class="form-group mb-3">
    <label for="codice">Inserisci il codice (10 caratteri):</label>
    <input type="text" id="codice" class="form-control" maxlength="10">
</div>

<div class="form-group mb-3">
    <br>        
        <button type="button" id="avviaButton"class="btn btn-primary">Avvia</button>  
        <button type="button" id="terminaButton"class="btn btn-danger">Termina</button>
</div>

<div class="form-group mb-3">
    <label>Seleziona la modalità di riconoscimento del volto:</label>
    <div>
        <input type="radio" id="single" name="mode" value="single" checked> Singola
    </div>
    <div>
        <input type="radio" id="multiple" name="mode" value="multiple"> Multipla
    </div>
</div>

<div id="myModal" class="modal">
    <div class="modal-content">
        <span class="close" onclick="closeModal()">&times;</span>
        <p id="modalMessage"></p>
    </div>
</div>

<div id="messageBox"></div>

<script>
    let socket;
    var id;
    var address = "192.168.1.89";
    var messages = [];
    var multiple = false;
    var sendPeriodicMessage

    // Evento del pulsante "Avvia"
    document.getElementById("avviaButton").addEventListener("click", function()
    {
        var codiceInput = document.getElementById("codice");
        var codiceValore = codiceInput.value;

        if (codiceValore.length <= 10) {
            document.getElementById("avviaButton").disabled = true;
            document.getElementById("terminaButton").disabled = false;

            socket = new WebSocket("ws://192.168.1.89:8766");

            if (multiple) 
            {
                mode = "multiple"
            } 
            else 
            {
                mode = "single"
            }

            // Invia un messaggio ogni 2 secondi
            sendPeriodicMessage = setInterval(function() 
            {
                var periodicMessage = 
                {
                    action: "Connection",
                    id: codiceValore,
                    mode: mode
                };

                socket.send(JSON.stringify(periodicMessage));

            }, 1000);
            
            socket.addEventListener("message", function(event) 
            {
                var message = event.data;

                // Analizza il messaggio JSON
                var messageData = JSON.parse(message);
                var timestamp = messageData.timestamp;
                var tenant = messageData.tenant

                if(multiple)
                {
                    var names = messageData.name.split(';');
                    // Aggiungi il messaggio all'array
                    messages.push(`${timestamp}-${names}-${tenant}`);
                }
                else
                {
                    var name = messageData.name;
                    // Aggiungi il messaggio all'array
                    messages.push(`${timestamp}-${name}-${tenant}`);
                }
                
                // Limita il numero di messaggi mostrati a 100
                if (messages.length > 20) {
                    messages.shift(); // Rimuovi il messaggio più vecchio
                }
                
                // Aggiorna il box dei messaggi
                updateMessageBox();
            });
        } 
        else 
        {
            // Il codice non è compilato correttamente, mostra un messaggio di errore
            alert("Inserisci un codice alfanumerico di 10 caratteri.");
        }
    });

    // Evento del pulsante "Termina"
    document.getElementById("terminaButton").addEventListener("click", function() 
    {
        // Disabilita il pulsante "Termina"
        document.getElementById("avviaButton").disabled = false;
        document.getElementById("terminaButton").disabled = true;

        // Chiudi la connessione WebSocket
        if (socket) 
        {
            socket.close();
            clearInterval(sendPeriodicMessage);
        }    
        
    });

    // Eventi dei radio button
    document.getElementById("single").addEventListener("change", function () {
        multiple = false;
    });

    document.getElementById("multiple").addEventListener("change", function () {
        multiple = true;
    });

    // Funzione per aggiornare il box dei messaggi
    function updateMessageBox() {
        var messageBox = document.getElementById("messageBox");
        messageBox.innerHTML = messages.join("<br>");
    }

</script>